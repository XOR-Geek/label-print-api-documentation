{
  "basePath": "/",
  "definitions": {},
  "host": "dev.wacoa.jp",
  "info": {
    "description": "This is API documentation for the Labelprint System API. The API provides endpoints for adjusting label data and publishing news. The API requires authentication using a Bearer token. The API is hosted at `dev.wacoa.jp`.",
    "termsOfService": "/tos",
    "title": "Labelprint System API",
    "version": "0.0.1"
  },
  "paths": {
    "/api/adjust_label/get_data": {
      "get": {
        "description": "<br/>This endpoint receives a GET request with a user ID as a query parameter, <br/>verifies the authentication token, and fetches the adjustment data <br/>associated with the user ID from `adjust_service`.<br/><br/>Query Parameters:<br/>    - user_id (str): The ID of the user for whom adjustment data is requested.<br/><br/>Headers:<br/>    - Authorization (str): Bearer token to authenticate the user.<br/>    <br/>Returns:<br/><br/>    - 200 OK: JSON response with the adjustment data if retrieval is successful.<br/>    - 401 Unauthorized: JSON error message if the authorization token is <br/>      missing or invalid.<br/>    - 500 Internal Server Error: JSON error message with details if an <br/>      unexpected error occurs.  <br/>",
        "parameters": [
          {
            "description": "Bearer token to authenticate the user.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the user for whom adjustment data is requested.",
            "in": "query",
            "name": "user_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Adjustment data retrieved successfully.",
            "schema": {
              "properties": {
                "data": {
                  "example": {
                    "adjustment_value": 5.75,
                    "description": "Adjustment for label printing error",
                    "label_id": "lbl_001"
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized – Missing or invalid authorization token.",
            "schema": {
              "properties": {
                "error": {
                  "example": "Unauthorized",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "properties": {
                "details": {
                  "type": "string"
                },
                "error": {
                  "example": "Internal Server Error",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Retrieves adjustment label data for a specified user.",
        "tags": [
          "Adjust"
        ]
      }
    },
    "/api/adjust_label/store": {
      "post": {
        "description": "<br/>This endpoint receives a POST request with adjustment data and saves it <br/>using `adjust_service.store_adjust_details` after verifying the <br/>authorization token.<br/><br/>Headers:<br/>    - Authorization (str): Bearer token to authenticate the user.<br/><br/>Returns:<br/><br/>    - 200 OK: JSON response with stored data if the operation is successful.<br/>    - 401 Unauthorized: JSON error message if the authorization token <br/>        is missing or invalid.<br/>    - 500 Internal Server Error: JSON error message with details if an <br/>        unexpected error occurs.<br/>",
        "parameters": [
          {
            "description": "Bearer token to authenticate the user.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The JSON payload containing the adjustment data.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "adjustment_value": {
                  "example": 5.75,
                  "type": "number"
                },
                "description": {
                  "example": "Adjustment for label printing error",
                  "type": "string"
                },
                "label_id": {
                  "example": "lbl_001",
                  "type": "string"
                }
              },
              "required": [
                "label_id",
                "adjustment_value"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Data stored successfully.",
            "schema": {
              "properties": {
                "data": {
                  "type": "object"
                },
                "message": {
                  "example": "Data stored successfully",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized – Missing or invalid authorization token.",
            "schema": {
              "properties": {
                "error": {
                  "example": "Unauthorized",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "properties": {
                "details": {
                  "type": "string"
                },
                "error": {
                  "example": "Internal Server Error",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Stores adjustment label data in the database.",
        "tags": [
          "Adjust"
        ]
      }
    },
    "/api/login": {
      "post": {
        "description": "<br/>This route accepts a JSON object containing user credentials and returns a token <br/>along with the user record if the authentication is successful.<br/><br/>Request Body:<br/>    - JSON object containing:<br/>        - 'user_id' (str): The ID of the user attempting to log in.<br/>        - 'password' (str): The password of the user attempting to log in.<br/><br/>Responses:<br/>    - 200 OK: Returns a successful login response including:<br/>        - 'message' (str): A success message.<br/>        - 'user_record' (dict): A dictionary containing user details.<br/>        - 'Authorization' (str): A Bearer token for authenticated requests.<br/><br/>    - 401 Unauthorized: Returns an error response if the credentials are invalid.<br/><br/>    - 500 Internal Server Error: Returns an error response if an unexpected error occurs during the authentication process.<br/><br/>Returns:<br/>    Response: A response object with the appropriate status code and JSON payload.<br/><br/>Raises:<br/>    Exception: If an unexpected error occurs during the password update process.<br/>",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "password": {
                    "example": "securepassword",
                    "type": "string"
                  },
                  "user_id": {
                    "example": "user_123",
                    "type": "string"
                  }
                },
                "required": [
                  "user_id",
                  "password"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Authorization": {
                      "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
                      "type": "string"
                    },
                    "message": {
                      "example": "Login successful",
                      "type": "string"
                    },
                    "user_record": {
                      "properties": {
                        "email": {
                          "example": "john.doe@example.com",
                          "type": "string"
                        },
                        "name": {
                          "example": "John Doe",
                          "type": "string"
                        },
                        "user_id": {
                          "example": "user_123",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Successful login response."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "example": "Invalid user ID or password",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized – Invalid credentials."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "example": "Unexpected error during authentication",
                      "type": "string"
                    },
                    "error": {
                      "example": "Internal Server Error",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Authenticates a user and logs them in.",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/publish_news": {
      "get": {
        "description": "<br/>This endpoint retrieves the necessary information for creating and publishing news.<br/><br/><br/>Responses:<br/>    - 200 OK: Returns a JSON object containing the data required for publishing news.<br/>    - 500 Internal Server Error: If there is an unexpected error during processing.<br/><br/> ",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "description": "The publish news data.",
                      "example": {
                        "content": "Details about the breaking news...",
                        "headline": "Breaking News!"
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "A JSON object containing the data required for publishing news."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "example": "Detailed error message if available.",
                      "type": "string"
                    },
                    "error": {
                      "example": "Internal Server Error",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Internal Server Error. An unexpected error occurred during processing."
          }
        },
        "summary": "Fetch data required for publishing news.",
        "tags": [
          "News"
        ]
      }
    }
  },
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "BearerAuth": {
      "description": "Enter your Bearer token as `Bearer <your_token>`",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey"
    }
  },
  "swagger": "2.0"
}
